@model Scheduling_App.ViewModels.UserVM

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>





<link rel="stylesheet" type="text/css" href="~/Content/bootstrap-datepicker.css" />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div id="register-layout">
        <div class="form-horizontal">
            <h4>User Register</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div id="flow_1">
                <div class="form-group">
                    @Html.LabelFor(model => model.username, htmlAttributes: new { @id = "username", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                    <div id="username_error" style="color:red"></div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @id = "email", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                    <div id="email_error" style="color:red"></div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @id = "password", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                    <div id="password_error" style="color:red"></div>
                </div>

                <input type="button" id="flow_1_next" value="Next" class="btn btn-default" />

            </div>

            <div id="flow_2">
                <div class="form-group">
                    @Html.LabelFor(model => model.first_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.website, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.website, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.website, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="button" id="flow_2_next" value="Next" class="btn btn-default" />

            </div>

            <div id="flow_3">
                <div class="form-group">
                    @Html.LabelFor(model => model.address_1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.address_1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address_1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.address_2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.address_2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address_2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.zip, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })
                    </div>
                </div>

             

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" id="register" class="btn btn-default" />
                    </div>
                </div>

            </div>




        </div>
    </div>
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



